// Mocks generated by Mockito 5.0.15 from annotations
// in photo_booth/test/modules/domain/photos/usecase/fetch_photos_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:photo_booth/modules/domain/photos/entity/photo_entity.dart'
    as _i4;
import 'package:photo_booth/modules/domain/photos/repository/photos_repository.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [PhotosRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhotosRepository extends _i1.Mock implements _i2.PhotosRepository {
  MockPhotosRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Photo>> fetchPhotos() =>
      (super.noSuchMethod(Invocation.method(#fetchPhotos, []),
              returnValue: Future<List<_i4.Photo>>.value(<_i4.Photo>[]))
          as _i3.Future<List<_i4.Photo>>);
  @override
  _i3.Future<void> savePhoto(_i4.Photo? photo) =>
      (super.noSuchMethod(Invocation.method(#savePhoto, [photo]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  String toString() => super.toString();
}
